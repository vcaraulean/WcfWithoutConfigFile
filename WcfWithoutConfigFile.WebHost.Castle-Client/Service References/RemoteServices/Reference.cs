//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.239
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WcfWithoutConfigFile.WebHost.Castle_Client.RemoteServices {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="RemoteServices.IUploadService")]
    public interface IUploadService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUploadService/Upload", ReplyAction="http://tempuri.org/IUploadService/UploadResponse")]
        int Upload(byte[] data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUploadService/GetCurrentWindowsIdentityName", ReplyAction="http://tempuri.org/IUploadService/GetCurrentWindowsIdentityNameResponse")]
        string GetCurrentWindowsIdentityName();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IUploadServiceChannel : WcfWithoutConfigFile.WebHost.Castle_Client.RemoteServices.IUploadService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UploadServiceClient : System.ServiceModel.ClientBase<WcfWithoutConfigFile.WebHost.Castle_Client.RemoteServices.IUploadService>, WcfWithoutConfigFile.WebHost.Castle_Client.RemoteServices.IUploadService {
        
        public UploadServiceClient() {
        }
        
        public UploadServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public UploadServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UploadServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UploadServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int Upload(byte[] data) {
            return base.Channel.Upload(data);
        }
        
        public string GetCurrentWindowsIdentityName() {
            return base.Channel.GetCurrentWindowsIdentityName();
        }
    }
}
